//------------------------------------------------------------------------------------------------------------------------
//-- Generated By:   TrungVK using CodeSmith 5.0.0.0
//-- Template:       Service.cst
//-- Date Generated: Monday, July 12, 2010
//------------------------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data.Common;
using System.Linq;
using System.Text;
using Entity;

namespace SystemManageService
{
    public partial class SYS_OrganizationService 
    {

        public List<SYS_Organization> SelectAllSYS_OrganizationByNotSYS_Roles()
        {
            return _sys_organizationDataAccess.SelectAllSYS_OrganizationByNotSYS_Roles();
        }

        public SYS_Organization SelectSYS_Organization(int sys_organizationId, DbConnection dbConnection)
        {
            return _sys_organizationDataAccess.SelectSYS_Organization(dbConnection, sys_organizationId);
        }

        public List<SYS_Organization> SelectAllSYS_Organization(string connect)
        {
            return _sys_organizationDataAccess.SelectAllSYS_Organization(connect);
        }
        public List<SYS_Organization> SYS_Organization_GetByParentId()
        {
            return _sys_organizationDataAccess.SYS_Organization_GetByParentId(ConfigurationSettings.AppSettings["ConnectionInfo"]);
        }

        public List<SYS_Organization> SysOrganizationGetByParentIdForTNGT(int ID)
        {
            List<SYS_Organization> lst = SelectAllSYS_Organization_GetByUserID(ID);
            List<SYS_Organization> listFull = SelectAllSYS_Organization();
            List<SYS_Organization> list = new List<SYS_Organization>();
            if (lst.Count == 0)
            {
                return null;
            }
            foreach (SYS_Organization sysOrganization in lst)
            {
                int IDOrganization = sysOrganization.ID;
                list.AddRange(listFull.Where(x => x.ParentId == IDOrganization && x.Code.Contains("bv")).ToList());
                if (list.Exists(x => x.ID == IDOrganization))
                    break;
                list.Add(sysOrganization);
            }
            return list;
        }


        public List<SYS_Organization> SelectAllSYS_OrganizationByStrCn()
        {
            return _sys_organizationDataAccess.SelectAllSYS_OrganizationByStrCn(ConfigurationSettings.AppSettings["ConnectionInfo"]);
        }
        public List<SYS_Organization> SYS_Organization_GetParentIdByID(int ID)
        {
            return _sys_organizationDataAccess.SYS_Organization_GetParentIdByID(ID);
        }
        public List<SYS_Organization> SelectAllSYS_Organization_GetByUserID(int ID, string connect)
        {
            return _sys_organizationDataAccess.SelectAllSYS_Organization_GetByUserID(ID, connect);
        }

        public List<SYS_Organization> SelectAllSYS_Organization_GetByUserID(int ID)
        {
            return _sys_organizationDataAccess.SelectAllSYS_Organization_GetByUserID(ID);
        }
        
        public SYS_Organization SelectSYS_Organization_GetByCode(string Code, string Connect)
        {
            return _sys_organizationDataAccess.SelectSYS_Organization_GetByCode(Code,Connect);
        }
        public List<SYS_Organization> Select_Organization_GetParentIdByID(int UserId)
        {
            SYS_OrganizationService _isys_OrganizationServer = new SYS_OrganizationService();
            List<SYS_Organization> lst = _isys_OrganizationServer.SelectAllSYS_Organization_GetByUserID(UserId);
            var list = new List<SYS_Organization>();
            if (lst.Count == 0)
            {
                return list;
            }
            foreach (SYS_Organization sysOrganization in lst)
            {
                list = _isys_OrganizationServer.SYS_Organization_GetParentIdByID(sysOrganization.ID);
                if (list.Exists(delegate(SYS_Organization x) { return x.ID == sysOrganization.ID; }))
                    break;
                list.Add(sysOrganization);
            }
            return list;
        }

        public List<SYS_Organization> SelectAllSYS_OrganizationGetRegion()
        {
            return _sys_organizationDataAccess.SelectAllSYS_OrganizationGetRegion();
        }

        public List<SYS_Organization> SYS_Organization_SelectByCodeType(string CodeType)
        {
            return _sys_organizationDataAccess.SelectByCodeType(CodeType);
        }

        public List<SYS_Organization> SYS_Organization_GetByType(int type)
        {
            return _sys_organizationDataAccess.SelectAllSYS_OrganizationByType(type);
        }
    }
}


