//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CBDN.ServerSignWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SignServerWSPortBinding", Namespace="http://ws.signer.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(responceWsBO))]
    public partial class SignServerWSService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getCertListOperationCompleted;
        
        private System.Threading.SendOrPostCallback reloadCertListOperationCompleted;
        
        private System.Threading.SendOrPostCallback signXmlBase64OperationCompleted;
        
        private System.Threading.SendOrPostCallback signPdfFilePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback signPdfBase64OperationCompleted;
        
        private System.Threading.SendOrPostCallback signHashBase64OperationCompleted;
        
        private System.Threading.SendOrPostCallback getCertInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback signXmlFilePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback signPdfBase64RectangleTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback verifyFileXmlBase64OperationCompleted;
        
        private System.Threading.SendOrPostCallback verifyFileXmlFilePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback workerReloadCertListSpecifyTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback signPdfBase64ImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback signPdfBase64TableOperationCompleted;
        
        private System.Threading.SendOrPostCallback signPdfFilePathRectangleTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback signPdfFilePathTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback verifyFilePdfFilePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback workerReloadCertListRepeatTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback signPdfFilePathImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback verifyFilePdfBase64OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SignServerWSService() {
            this.Url = global::CBDN.Properties.Settings.Default.CBDN_ServerSignWS_SignServerWSService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getCertListCompletedEventHandler getCertListCompleted;
        
        /// <remarks/>
        public event reloadCertListCompletedEventHandler reloadCertListCompleted;
        
        /// <remarks/>
        public event signXmlBase64CompletedEventHandler signXmlBase64Completed;
        
        /// <remarks/>
        public event signPdfFilePathCompletedEventHandler signPdfFilePathCompleted;
        
        /// <remarks/>
        public event signPdfBase64CompletedEventHandler signPdfBase64Completed;
        
        /// <remarks/>
        public event signHashBase64CompletedEventHandler signHashBase64Completed;
        
        /// <remarks/>
        public event getCertInfoCompletedEventHandler getCertInfoCompleted;
        
        /// <remarks/>
        public event signXmlFilePathCompletedEventHandler signXmlFilePathCompleted;
        
        /// <remarks/>
        public event signPdfBase64RectangleTextCompletedEventHandler signPdfBase64RectangleTextCompleted;
        
        /// <remarks/>
        public event verifyFileXmlBase64CompletedEventHandler verifyFileXmlBase64Completed;
        
        /// <remarks/>
        public event verifyFileXmlFilePathCompletedEventHandler verifyFileXmlFilePathCompleted;
        
        /// <remarks/>
        public event workerReloadCertListSpecifyTimeCompletedEventHandler workerReloadCertListSpecifyTimeCompleted;
        
        /// <remarks/>
        public event signPdfBase64ImageCompletedEventHandler signPdfBase64ImageCompleted;
        
        /// <remarks/>
        public event signPdfBase64TableCompletedEventHandler signPdfBase64TableCompleted;
        
        /// <remarks/>
        public event signPdfFilePathRectangleTextCompletedEventHandler signPdfFilePathRectangleTextCompleted;
        
        /// <remarks/>
        public event signPdfFilePathTableCompletedEventHandler signPdfFilePathTableCompleted;
        
        /// <remarks/>
        public event verifyFilePdfFilePathCompletedEventHandler verifyFilePdfFilePathCompleted;
        
        /// <remarks/>
        public event workerReloadCertListRepeatTimeCompletedEventHandler workerReloadCertListRepeatTimeCompleted;
        
        /// <remarks/>
        public event signPdfFilePathImageCompletedEventHandler signPdfFilePathImageCompleted;
        
        /// <remarks/>
        public event verifyFilePdfBase64CompletedEventHandler verifyFilePdfBase64Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public certListResponceBO getCertList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getCertList", new object[] {
                        arg0,
                        arg1});
            return ((certListResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void getCertListAsync(string arg0, string arg1) {
            this.getCertListAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getCertListAsync(string arg0, string arg1, object userState) {
            if ((this.getCertListOperationCompleted == null)) {
                this.getCertListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCertListOperationCompleted);
            }
            this.InvokeAsync("getCertList", new object[] {
                        arg0,
                        arg1}, this.getCertListOperationCompleted, userState);
        }
        
        private void OngetCertListOperationCompleted(object arg) {
            if ((this.getCertListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCertListCompleted(this, new getCertListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public certListResponceBO reloadCertList([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("reloadCertList", new object[] {
                        arg0,
                        arg1});
            return ((certListResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void reloadCertListAsync(string arg0, string arg1) {
            this.reloadCertListAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void reloadCertListAsync(string arg0, string arg1, object userState) {
            if ((this.reloadCertListOperationCompleted == null)) {
                this.reloadCertListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreloadCertListOperationCompleted);
            }
            this.InvokeAsync("reloadCertList", new object[] {
                        arg0,
                        arg1}, this.reloadCertListOperationCompleted, userState);
        }
        
        private void OnreloadCertListOperationCompleted(object arg) {
            if ((this.reloadCertListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reloadCertListCompleted(this, new reloadCertListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public signFileResponceBO signXmlBase64([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5) {
            object[] results = this.Invoke("signXmlBase64", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((signFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void signXmlBase64Async(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5) {
            this.signXmlBase64Async(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }
        
        /// <remarks/>
        public void signXmlBase64Async(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, object userState) {
            if ((this.signXmlBase64OperationCompleted == null)) {
                this.signXmlBase64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsignXmlBase64OperationCompleted);
            }
            this.InvokeAsync("signXmlBase64", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.signXmlBase64OperationCompleted, userState);
        }
        
        private void OnsignXmlBase64OperationCompleted(object arg) {
            if ((this.signXmlBase64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.signXmlBase64Completed(this, new signXmlBase64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public signFileResponceBO signPdfFilePath([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5) {
            object[] results = this.Invoke("signPdfFilePath", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((signFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void signPdfFilePathAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5) {
            this.signPdfFilePathAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }
        
        /// <remarks/>
        public void signPdfFilePathAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, object userState) {
            if ((this.signPdfFilePathOperationCompleted == null)) {
                this.signPdfFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsignPdfFilePathOperationCompleted);
            }
            this.InvokeAsync("signPdfFilePath", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.signPdfFilePathOperationCompleted, userState);
        }
        
        private void OnsignPdfFilePathOperationCompleted(object arg) {
            if ((this.signPdfFilePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.signPdfFilePathCompleted(this, new signPdfFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public signFileResponceBO signPdfBase64([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5) {
            object[] results = this.Invoke("signPdfBase64", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((signFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void signPdfBase64Async(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5) {
            this.signPdfBase64Async(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }
        
        /// <remarks/>
        public void signPdfBase64Async(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, object userState) {
            if ((this.signPdfBase64OperationCompleted == null)) {
                this.signPdfBase64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsignPdfBase64OperationCompleted);
            }
            this.InvokeAsync("signPdfBase64", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.signPdfBase64OperationCompleted, userState);
        }
        
        private void OnsignPdfBase64OperationCompleted(object arg) {
            if ((this.signPdfBase64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.signPdfBase64Completed(this, new signPdfBase64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public signDataBase64ResponceBO signHashBase64([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5) {
            object[] results = this.Invoke("signHashBase64", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((signDataBase64ResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void signHashBase64Async(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5) {
            this.signHashBase64Async(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }
        
        /// <remarks/>
        public void signHashBase64Async(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, object userState) {
            if ((this.signHashBase64OperationCompleted == null)) {
                this.signHashBase64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsignHashBase64OperationCompleted);
            }
            this.InvokeAsync("signHashBase64", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.signHashBase64OperationCompleted, userState);
        }
        
        private void OnsignHashBase64OperationCompleted(object arg) {
            if ((this.signHashBase64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.signHashBase64Completed(this, new signHashBase64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public certInfoResponceBO getCertInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3) {
            object[] results = this.Invoke("getCertInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((certInfoResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void getCertInfoAsync(string arg0, string arg1, string arg2, string arg3) {
            this.getCertInfoAsync(arg0, arg1, arg2, arg3, null);
        }
        
        /// <remarks/>
        public void getCertInfoAsync(string arg0, string arg1, string arg2, string arg3, object userState) {
            if ((this.getCertInfoOperationCompleted == null)) {
                this.getCertInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCertInfoOperationCompleted);
            }
            this.InvokeAsync("getCertInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getCertInfoOperationCompleted, userState);
        }
        
        private void OngetCertInfoOperationCompleted(object arg) {
            if ((this.getCertInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCertInfoCompleted(this, new getCertInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public signFileResponceBO signXmlFilePath([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5) {
            object[] results = this.Invoke("signXmlFilePath", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((signFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void signXmlFilePathAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5) {
            this.signXmlFilePathAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }
        
        /// <remarks/>
        public void signXmlFilePathAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, object userState) {
            if ((this.signXmlFilePathOperationCompleted == null)) {
                this.signXmlFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsignXmlFilePathOperationCompleted);
            }
            this.InvokeAsync("signXmlFilePath", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.signXmlFilePathOperationCompleted, userState);
        }
        
        private void OnsignXmlFilePathOperationCompleted(object arg) {
            if ((this.signXmlFilePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.signXmlFilePathCompleted(this, new signXmlFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public signFileResponceBO signPdfBase64RectangleText([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] displayRectangleTextConfigBO arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] timestampConfig arg7) {
            object[] results = this.Invoke("signPdfBase64RectangleText", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7});
            return ((signFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void signPdfBase64RectangleTextAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, displayRectangleTextConfigBO arg6, timestampConfig arg7) {
            this.signPdfBase64RectangleTextAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, null);
        }
        
        /// <remarks/>
        public void signPdfBase64RectangleTextAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, displayRectangleTextConfigBO arg6, timestampConfig arg7, object userState) {
            if ((this.signPdfBase64RectangleTextOperationCompleted == null)) {
                this.signPdfBase64RectangleTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsignPdfBase64RectangleTextOperationCompleted);
            }
            this.InvokeAsync("signPdfBase64RectangleText", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7}, this.signPdfBase64RectangleTextOperationCompleted, userState);
        }
        
        private void OnsignPdfBase64RectangleTextOperationCompleted(object arg) {
            if ((this.signPdfBase64RectangleTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.signPdfBase64RectangleTextCompleted(this, new signPdfBase64RectangleTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public verifyFileResponceBO verifyFileXmlBase64([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("verifyFileXmlBase64", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((verifyFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void verifyFileXmlBase64Async(string arg0, string arg1, string arg2) {
            this.verifyFileXmlBase64Async(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void verifyFileXmlBase64Async(string arg0, string arg1, string arg2, object userState) {
            if ((this.verifyFileXmlBase64OperationCompleted == null)) {
                this.verifyFileXmlBase64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnverifyFileXmlBase64OperationCompleted);
            }
            this.InvokeAsync("verifyFileXmlBase64", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.verifyFileXmlBase64OperationCompleted, userState);
        }
        
        private void OnverifyFileXmlBase64OperationCompleted(object arg) {
            if ((this.verifyFileXmlBase64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.verifyFileXmlBase64Completed(this, new verifyFileXmlBase64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public verifyFileResponceBO verifyFileXmlFilePath([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("verifyFileXmlFilePath", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((verifyFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void verifyFileXmlFilePathAsync(string arg0, string arg1, string arg2) {
            this.verifyFileXmlFilePathAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void verifyFileXmlFilePathAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.verifyFileXmlFilePathOperationCompleted == null)) {
                this.verifyFileXmlFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnverifyFileXmlFilePathOperationCompleted);
            }
            this.InvokeAsync("verifyFileXmlFilePath", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.verifyFileXmlFilePathOperationCompleted, userState);
        }
        
        private void OnverifyFileXmlFilePathOperationCompleted(object arg) {
            if ((this.verifyFileXmlFilePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.verifyFileXmlFilePathCompleted(this, new verifyFileXmlFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void workerReloadCertListSpecifyTime() {
            this.Invoke("workerReloadCertListSpecifyTime", new object[0]);
        }
        
        /// <remarks/>
        public void workerReloadCertListSpecifyTimeAsync() {
            this.workerReloadCertListSpecifyTimeAsync(null);
        }
        
        /// <remarks/>
        public void workerReloadCertListSpecifyTimeAsync(object userState) {
            if ((this.workerReloadCertListSpecifyTimeOperationCompleted == null)) {
                this.workerReloadCertListSpecifyTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnworkerReloadCertListSpecifyTimeOperationCompleted);
            }
            this.InvokeAsync("workerReloadCertListSpecifyTime", new object[0], this.workerReloadCertListSpecifyTimeOperationCompleted, userState);
        }
        
        private void OnworkerReloadCertListSpecifyTimeOperationCompleted(object arg) {
            if ((this.workerReloadCertListSpecifyTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.workerReloadCertListSpecifyTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public signFileResponceBO signPdfBase64Image([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] displayImageConfigBO arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] timestampConfig arg7) {
            object[] results = this.Invoke("signPdfBase64Image", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7});
            return ((signFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void signPdfBase64ImageAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, displayImageConfigBO arg6, timestampConfig arg7) {
            this.signPdfBase64ImageAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, null);
        }
        
        /// <remarks/>
        public void signPdfBase64ImageAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, displayImageConfigBO arg6, timestampConfig arg7, object userState) {
            if ((this.signPdfBase64ImageOperationCompleted == null)) {
                this.signPdfBase64ImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsignPdfBase64ImageOperationCompleted);
            }
            this.InvokeAsync("signPdfBase64Image", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7}, this.signPdfBase64ImageOperationCompleted, userState);
        }
        
        private void OnsignPdfBase64ImageOperationCompleted(object arg) {
            if ((this.signPdfBase64ImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.signPdfBase64ImageCompleted(this, new signPdfBase64ImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public signFileResponceBO signPdfBase64Table([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] displayTableConfigBO arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] timestampConfig arg7, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg8) {
            object[] results = this.Invoke("signPdfBase64Table", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8});
            return ((signFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void signPdfBase64TableAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, displayTableConfigBO arg6, timestampConfig arg7, bool arg8) {
            this.signPdfBase64TableAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, null);
        }
        
        /// <remarks/>
        public void signPdfBase64TableAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, displayTableConfigBO arg6, timestampConfig arg7, bool arg8, object userState) {
            if ((this.signPdfBase64TableOperationCompleted == null)) {
                this.signPdfBase64TableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsignPdfBase64TableOperationCompleted);
            }
            this.InvokeAsync("signPdfBase64Table", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8}, this.signPdfBase64TableOperationCompleted, userState);
        }
        
        private void OnsignPdfBase64TableOperationCompleted(object arg) {
            if ((this.signPdfBase64TableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.signPdfBase64TableCompleted(this, new signPdfBase64TableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public signFileResponceBO signPdfFilePathRectangleText([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] displayRectangleTextConfigBO arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] timestampConfig arg7) {
            object[] results = this.Invoke("signPdfFilePathRectangleText", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7});
            return ((signFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void signPdfFilePathRectangleTextAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, displayRectangleTextConfigBO arg6, timestampConfig arg7) {
            this.signPdfFilePathRectangleTextAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, null);
        }
        
        /// <remarks/>
        public void signPdfFilePathRectangleTextAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, displayRectangleTextConfigBO arg6, timestampConfig arg7, object userState) {
            if ((this.signPdfFilePathRectangleTextOperationCompleted == null)) {
                this.signPdfFilePathRectangleTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsignPdfFilePathRectangleTextOperationCompleted);
            }
            this.InvokeAsync("signPdfFilePathRectangleText", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7}, this.signPdfFilePathRectangleTextOperationCompleted, userState);
        }
        
        private void OnsignPdfFilePathRectangleTextOperationCompleted(object arg) {
            if ((this.signPdfFilePathRectangleTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.signPdfFilePathRectangleTextCompleted(this, new signPdfFilePathRectangleTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public signFileResponceBO signPdfFilePathTable([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] displayTableConfigBO arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] timestampConfig arg7, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool arg8) {
            object[] results = this.Invoke("signPdfFilePathTable", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8});
            return ((signFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void signPdfFilePathTableAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, displayTableConfigBO arg6, timestampConfig arg7, bool arg8) {
            this.signPdfFilePathTableAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, null);
        }
        
        /// <remarks/>
        public void signPdfFilePathTableAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, displayTableConfigBO arg6, timestampConfig arg7, bool arg8, object userState) {
            if ((this.signPdfFilePathTableOperationCompleted == null)) {
                this.signPdfFilePathTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsignPdfFilePathTableOperationCompleted);
            }
            this.InvokeAsync("signPdfFilePathTable", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7,
                        arg8}, this.signPdfFilePathTableOperationCompleted, userState);
        }
        
        private void OnsignPdfFilePathTableOperationCompleted(object arg) {
            if ((this.signPdfFilePathTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.signPdfFilePathTableCompleted(this, new signPdfFilePathTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public verifyFileResponceBO verifyFilePdfFilePath([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("verifyFilePdfFilePath", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((verifyFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void verifyFilePdfFilePathAsync(string arg0, string arg1, string arg2) {
            this.verifyFilePdfFilePathAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void verifyFilePdfFilePathAsync(string arg0, string arg1, string arg2, object userState) {
            if ((this.verifyFilePdfFilePathOperationCompleted == null)) {
                this.verifyFilePdfFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnverifyFilePdfFilePathOperationCompleted);
            }
            this.InvokeAsync("verifyFilePdfFilePath", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.verifyFilePdfFilePathOperationCompleted, userState);
        }
        
        private void OnverifyFilePdfFilePathOperationCompleted(object arg) {
            if ((this.verifyFilePdfFilePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.verifyFilePdfFilePathCompleted(this, new verifyFilePdfFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void workerReloadCertListRepeatTime() {
            this.Invoke("workerReloadCertListRepeatTime", new object[0]);
        }
        
        /// <remarks/>
        public void workerReloadCertListRepeatTimeAsync() {
            this.workerReloadCertListRepeatTimeAsync(null);
        }
        
        /// <remarks/>
        public void workerReloadCertListRepeatTimeAsync(object userState) {
            if ((this.workerReloadCertListRepeatTimeOperationCompleted == null)) {
                this.workerReloadCertListRepeatTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnworkerReloadCertListRepeatTimeOperationCompleted);
            }
            this.InvokeAsync("workerReloadCertListRepeatTime", new object[0], this.workerReloadCertListRepeatTimeOperationCompleted, userState);
        }
        
        private void OnworkerReloadCertListRepeatTimeOperationCompleted(object arg) {
            if ((this.workerReloadCertListRepeatTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.workerReloadCertListRepeatTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public signFileResponceBO signPdfFilePathImage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] displayImageConfigBO arg6, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] timestampConfig arg7) {
            object[] results = this.Invoke("signPdfFilePathImage", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7});
            return ((signFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void signPdfFilePathImageAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, displayImageConfigBO arg6, timestampConfig arg7) {
            this.signPdfFilePathImageAsync(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, null);
        }
        
        /// <remarks/>
        public void signPdfFilePathImageAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, displayImageConfigBO arg6, timestampConfig arg7, object userState) {
            if ((this.signPdfFilePathImageOperationCompleted == null)) {
                this.signPdfFilePathImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsignPdfFilePathImageOperationCompleted);
            }
            this.InvokeAsync("signPdfFilePathImage", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5,
                        arg6,
                        arg7}, this.signPdfFilePathImageOperationCompleted, userState);
        }
        
        private void OnsignPdfFilePathImageOperationCompleted(object arg) {
            if ((this.signPdfFilePathImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.signPdfFilePathImageCompleted(this, new signPdfFilePathImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.signer.com/", ResponseNamespace="http://ws.signer.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public verifyFileResponceBO verifyFilePdfBase64([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2) {
            object[] results = this.Invoke("verifyFilePdfBase64", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((verifyFileResponceBO)(results[0]));
        }
        
        /// <remarks/>
        public void verifyFilePdfBase64Async(string arg0, string arg1, string arg2) {
            this.verifyFilePdfBase64Async(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void verifyFilePdfBase64Async(string arg0, string arg1, string arg2, object userState) {
            if ((this.verifyFilePdfBase64OperationCompleted == null)) {
                this.verifyFilePdfBase64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnverifyFilePdfBase64OperationCompleted);
            }
            this.InvokeAsync("verifyFilePdfBase64", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.verifyFilePdfBase64OperationCompleted, userState);
        }
        
        private void OnverifyFilePdfBase64OperationCompleted(object arg) {
            if ((this.verifyFilePdfBase64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.verifyFilePdfBase64Completed(this, new verifyFilePdfBase64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class certListResponceBO : responceWsBO {
        
        private string[] certListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("certList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] certList {
            get {
                return this.certListField;
            }
            set {
                this.certListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(certListResponceBO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(signDataBase64ResponceBO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(verifyFileResponceBO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(signFileResponceBO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(certInfoResponceBO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class responceWsBO {
        
        private objectError objectErrorField;
        
        private bool statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public objectError objectError {
            get {
                return this.objectErrorField;
            }
            set {
                this.objectErrorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class objectError {
        
        private int errorCodeField;
        
        private string errorDescField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string errorDesc {
            get {
                return this.errorDescField;
            }
            set {
                this.errorDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class displayTableConfigBO {
        
        private System.Nullable<int>[] alignmentArrayField;
        
        private System.Nullable<int>[] backgroundColorTitleField;
        
        private string fontPathField;
        
        private int fontSizeTitlePageSignField;
        
        private float heightRowTitlePageSignField;
        
        private float heightTitleField;
        
        private bool isDisplayTitlePageSignField;
        
        private float marginBottomOfTableField;
        
        private float marginRightOfTableField;
        
        private float marginTopOfTableField;
        
        private int maxPageSignField;
        
        private string pageSizeField;
        
        private System.DateTime signDateField;
        
        private bool signDateFieldSpecified;
        
        private int sizeFontField;
        
        private string[] textArrayField;
        
        private string titlePageSignField;
        
        private string[] titlesField;
        
        private int totalPageSignField;
        
        private System.Nullable<float>[] widthsPercenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("alignmentArray", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] alignmentArray {
            get {
                return this.alignmentArrayField;
            }
            set {
                this.alignmentArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("backgroundColorTitle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] backgroundColorTitle {
            get {
                return this.backgroundColorTitleField;
            }
            set {
                this.backgroundColorTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fontPath {
            get {
                return this.fontPathField;
            }
            set {
                this.fontPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int fontSizeTitlePageSign {
            get {
                return this.fontSizeTitlePageSignField;
            }
            set {
                this.fontSizeTitlePageSignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float heightRowTitlePageSign {
            get {
                return this.heightRowTitlePageSignField;
            }
            set {
                this.heightRowTitlePageSignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float heightTitle {
            get {
                return this.heightTitleField;
            }
            set {
                this.heightTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isDisplayTitlePageSign {
            get {
                return this.isDisplayTitlePageSignField;
            }
            set {
                this.isDisplayTitlePageSignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float marginBottomOfTable {
            get {
                return this.marginBottomOfTableField;
            }
            set {
                this.marginBottomOfTableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float marginRightOfTable {
            get {
                return this.marginRightOfTableField;
            }
            set {
                this.marginRightOfTableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float marginTopOfTable {
            get {
                return this.marginTopOfTableField;
            }
            set {
                this.marginTopOfTableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int maxPageSign {
            get {
                return this.maxPageSignField;
            }
            set {
                this.maxPageSignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime signDate {
            get {
                return this.signDateField;
            }
            set {
                this.signDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool signDateSpecified {
            get {
                return this.signDateFieldSpecified;
            }
            set {
                this.signDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sizeFont {
            get {
                return this.sizeFontField;
            }
            set {
                this.sizeFontField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("textArray", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] textArray {
            get {
                return this.textArrayField;
            }
            set {
                this.textArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string titlePageSign {
            get {
                return this.titlePageSignField;
            }
            set {
                this.titlePageSignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("titles", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] titles {
            get {
                return this.titlesField;
            }
            set {
                this.titlesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int totalPageSign {
            get {
                return this.totalPageSignField;
            }
            set {
                this.totalPageSignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("widthsPercen", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<float>[] widthsPercen {
            get {
                return this.widthsPercenField;
            }
            set {
                this.widthsPercenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class displayImageConfigBO {
        
        private string contactField;
        
        private string fileImageBase64Field;
        
        private float heightRectangleField;
        
        private int locateSignField;
        
        private string locationField;
        
        private float marginBottomOfRectangleField;
        
        private float marginLeftOfRectangleField;
        
        private float marginRightOfRectangleField;
        
        private float marginTopOfRectangleField;
        
        private int numberPageSignField;
        
        private string pathImageField;
        
        private string reasonField;
        
        private System.DateTime signDateField;
        
        private bool signDateFieldSpecified;
        
        private float widthRectangleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fileImageBase64 {
            get {
                return this.fileImageBase64Field;
            }
            set {
                this.fileImageBase64Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float heightRectangle {
            get {
                return this.heightRectangleField;
            }
            set {
                this.heightRectangleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int locateSign {
            get {
                return this.locateSignField;
            }
            set {
                this.locateSignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float marginBottomOfRectangle {
            get {
                return this.marginBottomOfRectangleField;
            }
            set {
                this.marginBottomOfRectangleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float marginLeftOfRectangle {
            get {
                return this.marginLeftOfRectangleField;
            }
            set {
                this.marginLeftOfRectangleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float marginRightOfRectangle {
            get {
                return this.marginRightOfRectangleField;
            }
            set {
                this.marginRightOfRectangleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float marginTopOfRectangle {
            get {
                return this.marginTopOfRectangleField;
            }
            set {
                this.marginTopOfRectangleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberPageSign {
            get {
                return this.numberPageSignField;
            }
            set {
                this.numberPageSignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pathImage {
            get {
                return this.pathImageField;
            }
            set {
                this.pathImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime signDate {
            get {
                return this.signDateField;
            }
            set {
                this.signDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool signDateSpecified {
            get {
                return this.signDateFieldSpecified;
            }
            set {
                this.signDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float widthRectangle {
            get {
                return this.widthRectangleField;
            }
            set {
                this.widthRectangleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class timestampConfig {
        
        private string tsa_accField;
        
        private string tsa_passField;
        
        private string tsa_urlField;
        
        private bool useTimestampField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tsa_acc {
            get {
                return this.tsa_accField;
            }
            set {
                this.tsa_accField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tsa_pass {
            get {
                return this.tsa_passField;
            }
            set {
                this.tsa_passField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string tsa_url {
            get {
                return this.tsa_urlField;
            }
            set {
                this.tsa_urlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool useTimestamp {
            get {
                return this.useTimestampField;
            }
            set {
                this.useTimestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class displayRectangleTextConfigBO {
        
        private string contactField;
        
        private string dateFormatStringField;
        
        private string displayTextField;
        
        private string fontPathField;
        
        private string formatRectangleTextField;
        
        private float heightRectangleField;
        
        private int locateSignField;
        
        private string locationField;
        
        private float marginBottomOfRectangleField;
        
        private float marginLeftOfRectangleField;
        
        private float marginRightOfRectangleField;
        
        private float marginTopOfRectangleField;
        
        private int numberPageSignField;
        
        private string organizationField;
        
        private string organizationUnitField;
        
        private string reasonField;
        
        private System.DateTime signDateField;
        
        private bool signDateFieldSpecified;
        
        private int sizeFontField;
        
        private float widthRectangleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateFormatString {
            get {
                return this.dateFormatStringField;
            }
            set {
                this.dateFormatStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string displayText {
            get {
                return this.displayTextField;
            }
            set {
                this.displayTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fontPath {
            get {
                return this.fontPathField;
            }
            set {
                this.fontPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string formatRectangleText {
            get {
                return this.formatRectangleTextField;
            }
            set {
                this.formatRectangleTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float heightRectangle {
            get {
                return this.heightRectangleField;
            }
            set {
                this.heightRectangleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int locateSign {
            get {
                return this.locateSignField;
            }
            set {
                this.locateSignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float marginBottomOfRectangle {
            get {
                return this.marginBottomOfRectangleField;
            }
            set {
                this.marginBottomOfRectangleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float marginLeftOfRectangle {
            get {
                return this.marginLeftOfRectangleField;
            }
            set {
                this.marginLeftOfRectangleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float marginRightOfRectangle {
            get {
                return this.marginRightOfRectangleField;
            }
            set {
                this.marginRightOfRectangleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float marginTopOfRectangle {
            get {
                return this.marginTopOfRectangleField;
            }
            set {
                this.marginTopOfRectangleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numberPageSign {
            get {
                return this.numberPageSignField;
            }
            set {
                this.numberPageSignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string organization {
            get {
                return this.organizationField;
            }
            set {
                this.organizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string organizationUnit {
            get {
                return this.organizationUnitField;
            }
            set {
                this.organizationUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime signDate {
            get {
                return this.signDateField;
            }
            set {
                this.signDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool signDateSpecified {
            get {
                return this.signDateFieldSpecified;
            }
            set {
                this.signDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sizeFont {
            get {
                return this.sizeFontField;
            }
            set {
                this.sizeFontField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float widthRectangle {
            get {
                return this.widthRectangleField;
            }
            set {
                this.widthRectangleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class resultVerifyCertBO {
        
        private certBO certField;
        
        private string descriptionField;
        
        private System.DateTime signDateField;
        
        private bool signDateFieldSpecified;
        
        private int statusField;
        
        private bool statusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public certBO cert {
            get {
                return this.certField;
            }
            set {
                this.certField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime signDate {
            get {
                return this.signDateField;
            }
            set {
                this.signDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool signDateSpecified {
            get {
                return this.signDateFieldSpecified;
            }
            set {
                this.signDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class certBO {
        
        private int certStatusField;
        
        private bool certStatusFieldSpecified;
        
        private string descriptionField;
        
        private string dnField;
        
        private string issuerField;
        
        private int keyLengthField;
        
        private bool keyLengthFieldSpecified;
        
        private string nameField;
        
        private string serialField;
        
        private System.DateTime validFrField;
        
        private bool validFrFieldSpecified;
        
        private System.DateTime validToField;
        
        private bool validToFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int certStatus {
            get {
                return this.certStatusField;
            }
            set {
                this.certStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool certStatusSpecified {
            get {
                return this.certStatusFieldSpecified;
            }
            set {
                this.certStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dn {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string issuer {
            get {
                return this.issuerField;
            }
            set {
                this.issuerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int keyLength {
            get {
                return this.keyLengthField;
            }
            set {
                this.keyLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool keyLengthSpecified {
            get {
                return this.keyLengthFieldSpecified;
            }
            set {
                this.keyLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime validFr {
            get {
                return this.validFrField;
            }
            set {
                this.validFrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validFrSpecified {
            get {
                return this.validFrFieldSpecified;
            }
            set {
                this.validFrFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime validTo {
            get {
                return this.validToField;
            }
            set {
                this.validToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validToSpecified {
            get {
                return this.validToFieldSpecified;
            }
            set {
                this.validToFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class verifyFileResultBO {
        
        private int fileStatusField;
        
        private bool fileStatusFieldSpecified;
        
        private string reasonField;
        
        private resultVerifyCertBO[] resultVerifyCertBOListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int fileStatus {
            get {
                return this.fileStatusField;
            }
            set {
                this.fileStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fileStatusSpecified {
            get {
                return this.fileStatusFieldSpecified;
            }
            set {
                this.fileStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("resultVerifyCertBOList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public resultVerifyCertBO[] resultVerifyCertBOList {
            get {
                return this.resultVerifyCertBOListField;
            }
            set {
                this.resultVerifyCertBOListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class signDataBase64ResponceBO : responceWsBO {
        
        private string signatureBase64Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string signatureBase64 {
            get {
                return this.signatureBase64Field;
            }
            set {
                this.signatureBase64Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class verifyFileResponceBO : responceWsBO {
        
        private verifyFileResultBO verifyFileResultBOField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public verifyFileResultBO verifyFileResultBO {
            get {
                return this.verifyFileResultBOField;
            }
            set {
                this.verifyFileResultBOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class signFileResponceBO : responceWsBO {
        
        private string signedFileBase64Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string signedFileBase64 {
            get {
                return this.signedFileBase64Field;
            }
            set {
                this.signedFileBase64Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.signer.com/")]
    public partial class certInfoResponceBO : responceWsBO {
        
        private certBO certBOField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public certBO certBO {
            get {
                return this.certBOField;
            }
            set {
                this.certBOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCertListCompletedEventHandler(object sender, getCertListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCertListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCertListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public certListResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((certListResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void reloadCertListCompletedEventHandler(object sender, reloadCertListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reloadCertListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reloadCertListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public certListResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((certListResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void signXmlBase64CompletedEventHandler(object sender, signXmlBase64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class signXmlBase64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal signXmlBase64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public signFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((signFileResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void signPdfFilePathCompletedEventHandler(object sender, signPdfFilePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class signPdfFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal signPdfFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public signFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((signFileResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void signPdfBase64CompletedEventHandler(object sender, signPdfBase64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class signPdfBase64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal signPdfBase64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public signFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((signFileResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void signHashBase64CompletedEventHandler(object sender, signHashBase64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class signHashBase64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal signHashBase64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public signDataBase64ResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((signDataBase64ResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCertInfoCompletedEventHandler(object sender, getCertInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCertInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCertInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public certInfoResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((certInfoResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void signXmlFilePathCompletedEventHandler(object sender, signXmlFilePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class signXmlFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal signXmlFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public signFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((signFileResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void signPdfBase64RectangleTextCompletedEventHandler(object sender, signPdfBase64RectangleTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class signPdfBase64RectangleTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal signPdfBase64RectangleTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public signFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((signFileResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void verifyFileXmlBase64CompletedEventHandler(object sender, verifyFileXmlBase64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class verifyFileXmlBase64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal verifyFileXmlBase64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public verifyFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((verifyFileResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void verifyFileXmlFilePathCompletedEventHandler(object sender, verifyFileXmlFilePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class verifyFileXmlFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal verifyFileXmlFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public verifyFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((verifyFileResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void workerReloadCertListSpecifyTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void signPdfBase64ImageCompletedEventHandler(object sender, signPdfBase64ImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class signPdfBase64ImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal signPdfBase64ImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public signFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((signFileResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void signPdfBase64TableCompletedEventHandler(object sender, signPdfBase64TableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class signPdfBase64TableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal signPdfBase64TableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public signFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((signFileResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void signPdfFilePathRectangleTextCompletedEventHandler(object sender, signPdfFilePathRectangleTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class signPdfFilePathRectangleTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal signPdfFilePathRectangleTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public signFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((signFileResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void signPdfFilePathTableCompletedEventHandler(object sender, signPdfFilePathTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class signPdfFilePathTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal signPdfFilePathTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public signFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((signFileResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void verifyFilePdfFilePathCompletedEventHandler(object sender, verifyFilePdfFilePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class verifyFilePdfFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal verifyFilePdfFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public verifyFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((verifyFileResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void workerReloadCertListRepeatTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void signPdfFilePathImageCompletedEventHandler(object sender, signPdfFilePathImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class signPdfFilePathImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal signPdfFilePathImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public signFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((signFileResponceBO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void verifyFilePdfBase64CompletedEventHandler(object sender, verifyFilePdfBase64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class verifyFilePdfBase64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal verifyFilePdfBase64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public verifyFileResponceBO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((verifyFileResponceBO)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591