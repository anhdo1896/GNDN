//------------------------------------------------------------------------------------------------------------------------
//-- Generated By:   TrungVK using CodeSmith 5.0.0.0
//-- Template:       DataAcess.cst
//-- Date Generated: Monday, July 12, 2010
//------------------------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data.Common;
using System.Linq;
using System.Text;
using Entity;

namespace DataAccess
{
    public partial class SYS_RightOfUserDataAccess
    {
        public int InsertSYS_RightOfUser(List<SYS_RightOfUser> sys_rightofusers)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            int count = 0;
            try
            {

                foreach (SYS_RightOfUser sys_rightofuser in sys_rightofusers)
                {
                    List<DbParameter> para = new List<DbParameter>();

                    para.Add(_DbHelper.CreateParameter(FIELD_RIGHTID, sys_rightofuser.RightId, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_USERID, sys_rightofuser.UserId, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_VIEW, sys_rightofuser.View, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_UPDATE, sys_rightofuser.Update, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_CREATE, sys_rightofuser.Create, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_DELETE, sys_rightofuser.Delete, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_APPROVE, sys_rightofuser.Approve, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_rightofuser.ID, false));

                    _DbHelper.ExecuteNonQuery(conn, Common.DatabaseSchema + "[SYS_RightOfUser_Insert]", para.ToArray());
                    count++;
                }
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_RightOfUserDataAccess.Update: {0}", ex.Message));
            }
            finally
            {
                conn.Close();
            }
            return count;
        }

        public void DeleteSYS_RightOfUser_ByUser(List<SYS_RightOfUser> sys_rightofusers)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            List<DbParameter> para = new List<DbParameter>();

            try
            {

                foreach (SYS_RightOfUser sys_rightofuser in sys_rightofusers)
                {

                    para.Add(_DbHelper.CreateParameter(FIELD_RIGHTID, sys_rightofuser.RightId, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_USERID, sys_rightofuser.UserId, false));

                    _DbHelper.ExecuteNonQuery(conn, Common.DatabaseSchema + "[SYS_RightOfUser_Delete_ByUser]", para.ToArray());
                    para.Clear();
                }
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_RightOfUserDataAccess.Delete: {0}", ex.Message));
            }
            finally
            {
                conn.Close();
            }
        }

        public void DeleteSYS_RightOfUserByIDUser(SYS_RightOfUser sys_rightofuser)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_USERID, sys_rightofuser.UserId, false));
                _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_RightOfUser_Delete_ByIDUser]", para.ToArray());
            }
            catch (Exception)
            {

                throw;
            }
            finally
            {
                conn.Close();
            }


        }

    }
}


