//------------------------------------------------------------------------------------------------------------------------
//-- Generated By:   TrungVK using CodeSmith 5.0.0.0
//-- Template:       DataAcessGen.cst
//-- Date Generated: Monday, October 17, 2011
//------------------------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Text;
using Connection;
using Entity;


namespace DataAccess
{
    public partial class SYS_CategoryManagerDataAccess
    {

        private SYS_CategoryManager _sys_categorymanager;

        private MSSqlHelper _DbHelper = new MSSqlHelper();

        public static string FIELD_ID = "ID";
        public static string FIELD_TABLENAME = "TableName";
        public static string FIELD_DISPLAYNAME = "DisplayName";
        public static string FIELD_LINK = "Link";
        public static string FIELD_GROUPNAME = "GroupName";


        #region Private methods

        private static void SetSYS_CategoryManagerInfo(DbDataReader reader, ref SYS_CategoryManager sys_categorymanager)
        {
            sys_categorymanager.ID = int.Parse("0" + reader[FIELD_ID]);
            sys_categorymanager.TableName = reader[FIELD_TABLENAME] + "";
            sys_categorymanager.DisplayName = reader[FIELD_DISPLAYNAME] + "";
            sys_categorymanager.Link = reader[FIELD_LINK] + "";
            sys_categorymanager.GroupName = reader[FIELD_GROUPNAME] + "";
        }

        private static void SetListSYS_CategoryManagerInfo(ref DbDataReader reader, ref List<SYS_CategoryManager> sys_categorymanagers)
        {
            SYS_CategoryManager sys_categorymanager = null;
            while (reader.Read())
            {
                sys_categorymanager = new SYS_CategoryManager();
                SYS_CategoryManagerDataAccess.SetSYS_CategoryManagerInfo(reader, ref sys_categorymanager);
                sys_categorymanagers.Add(sys_categorymanager);
            }
        }

        #endregion

        #region Static methods
        #endregion
        public int InsertSYS_CategoryManager(SYS_CategoryManager sys_categorymanager)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                DbParameter ouput = _DbHelper.CreateParameter(FIELD_ID, DbType.Int32, true);
                para.Add(_DbHelper.CreateParameter(FIELD_TABLENAME, sys_categorymanager.TableName, false));
                para.Add(_DbHelper.CreateParameter(FIELD_DISPLAYNAME, sys_categorymanager.DisplayName, false));
                para.Add(_DbHelper.CreateParameter(FIELD_LINK, sys_categorymanager.Link, false));
                para.Add(_DbHelper.CreateParameter(FIELD_GROUPNAME, sys_categorymanager.GroupName, false));
                para.Add(ouput);
                _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_CategoryManager_Insert]", para.ToArray());
                return (int)ouput.Value;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_CategoryManagerDataAccess.Insert: {0}", ex.Message));
            }
            finally
            {
                conn.Close();
            }
        }

        public int UpdateSYS_CategoryManager(List<SYS_CategoryManager> sys_categorymanagers)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            int count = 0;
            try
            {

                foreach (SYS_CategoryManager sys_categorymanager in sys_categorymanagers)
                {
                    List<DbParameter> para = new List<DbParameter>();

                    para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_categorymanager.ID, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_TABLENAME, sys_categorymanager.TableName, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_DISPLAYNAME, sys_categorymanager.DisplayName, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_LINK, sys_categorymanager.Link, false));

                    _DbHelper.ExecuteNonQuery(conn, Common.DatabaseSchema + "[sys_categorymanager_Update]", para.ToArray());
                    count++;
                }
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_CategoryManagerDataAccess.Update: {0}", ex.Message));
            }
            finally
            {
                conn.Close();
            }
            return count;
        }

        public void UpdateSYS_CategoryManager(SYS_CategoryManager sys_categorymanager)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            try
            {
                List<DbParameter> para = new List<DbParameter>();

                para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_categorymanager.ID, false));
                para.Add(_DbHelper.CreateParameter(FIELD_TABLENAME, sys_categorymanager.TableName, false));
                para.Add(_DbHelper.CreateParameter(FIELD_DISPLAYNAME, sys_categorymanager.DisplayName, false));
                para.Add(_DbHelper.CreateParameter(FIELD_LINK, sys_categorymanager.Link, false));
                para.Add(_DbHelper.CreateParameter(FIELD_GROUPNAME, sys_categorymanager.GroupName, false));

                _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_CategoryManager_Update]", para.ToArray());

            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_CategoryManagerDataAccess.Update: {0}", ex.Message));
            }
            finally
            {
                conn.Close();
            }
        }

        public void DeleteSYS_CategoryManager(List<SYS_CategoryManager> sys_categorymanagers)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            List<DbParameter> para = new List<DbParameter>();

            try
            {

                foreach (SYS_CategoryManager sys_categorymanager in sys_categorymanagers)
                {

                    para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_categorymanager.ID, false));

                    _DbHelper.ExecuteNonQuery(conn, Common.DatabaseSchema + "[SYS_CategoryManager_Delete]", para.ToArray());
                    para.Clear();
                }
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_CategoryManagerDataAccess.Delete: {0}", ex.Message));
            }
            finally
            {
                conn.Close();
            }
        }

        public void DeleteSYS_CategoryManager(SYS_CategoryManager sys_categorymanager)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_categorymanager.ID, false));
                _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_CategoryManager_Delete]", para.ToArray());
            }
            catch (Exception)
            {

                throw;
            }
            finally
            {
                conn.Close();
            }

        }

        public SYS_CategoryManager SelectSYS_CategoryManager(int ID)
        {

            SYS_CategoryManager sys_categorymanager = new SYS_CategoryManager();
            DbDataReader reader = null;
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ID, ID, false));

                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_CategoryManager_SelectById]", para.ToArray());
                if (reader.HasRows && reader.Read())
                    SYS_CategoryManagerDataAccess.SetSYS_CategoryManagerInfo(reader, ref sys_categorymanager);
                return sys_categorymanager;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_CategoryManagerDataAccess.SelectById: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }

        }


        public List<SYS_CategoryManager> SelectAllSYS_CategoryManager()
        {
            List<SYS_CategoryManager> sys_categorymanager = new List<SYS_CategoryManager>();
            DbDataReader reader = null;
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            try
            {
                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_CategoryManager_SelectAll]", (DbParameter[])null);
                if (reader.HasRows)
                    SYS_CategoryManagerDataAccess.SetListSYS_CategoryManagerInfoAddColumnCategory(ref reader, ref sys_categorymanager);
                return sys_categorymanager;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_CategoryManagerDataAccess.SelectAll: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }

        public int InsertSYS_CategoryManager(DbTransaction transaction, SYS_CategoryManager sys_categorymanager)
        {
            try
            {
                List<DbParameter> para = new List<DbParameter>();

                DbParameter ouput = _DbHelper.CreateParameter(FIELD_ID, DbType.Int32, true);
                para.Add(_DbHelper.CreateParameter(FIELD_TABLENAME, sys_categorymanager.TableName, false));
                para.Add(_DbHelper.CreateParameter(FIELD_DISPLAYNAME, sys_categorymanager.DisplayName, false));
                para.Add(_DbHelper.CreateParameter(FIELD_LINK, sys_categorymanager.Link, false));

                para.Add(ouput);

                _DbHelper.ExecuteNonQuery(transaction, Common.DatabaseSchema + "[SYS_CategoryManager_Insert]", para.ToArray());

                return (int)ouput.Value;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_CategoryManagerDataAccess.Insert: {0}", ex.Message));
            }
        }



        public int UpdateSYS_CategoryManager(DbTransaction transaction, List<SYS_CategoryManager> sys_categorymanagers)
        {

            int count = 0;
            try
            {

                foreach (SYS_CategoryManager sys_categorymanager in sys_categorymanagers)
                {
                    List<DbParameter> para = new List<DbParameter>();

                    para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_categorymanager.ID, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_TABLENAME, sys_categorymanager.TableName, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_DISPLAYNAME, sys_categorymanager.DisplayName, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_LINK, sys_categorymanager.Link, false));

                    _DbHelper.ExecuteNonQuery(transaction, Common.DatabaseSchema + "[SYS_CategoryManager_Update]", para.ToArray());
                    count++;
                }
            }

            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_CategoryManagerDataAccess.Update: {0}", ex.Message));
            }

            return count;
        }

        public void UpdateSYS_CategoryManager(DbTransaction transaction, SYS_CategoryManager sys_categorymanager)
        {
            try
            {
                List<DbParameter> para = new List<DbParameter>();

                para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_categorymanager.ID, false));
                para.Add(_DbHelper.CreateParameter(FIELD_TABLENAME, sys_categorymanager.TableName, false));
                para.Add(_DbHelper.CreateParameter(FIELD_DISPLAYNAME, sys_categorymanager.DisplayName, false));
                para.Add(_DbHelper.CreateParameter(FIELD_LINK, sys_categorymanager.Link, false));

                _DbHelper.ExecuteNonQuery(transaction, Common.DatabaseSchema + "[SYS_CategoryManager_Update]", para.ToArray());

            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_CategoryManagerDataAccess.Update: {0}", ex.Message));
            }
        }

        public int DeleteSYS_CategoryManager(DbTransaction transaction, List<SYS_CategoryManager> sys_categorymanagers)
        {
            int count = 0;
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                foreach (SYS_CategoryManager sys_categorymanager in sys_categorymanagers)
                {
                    para.Add(_DbHelper.CreateParameter(FIELD_ID, DbType.Int32, false));

                    _DbHelper.ExecuteNonQuery(transaction, Common.DatabaseSchema + "[SYS_CategoryManager_Delete]", para.ToArray());
                    para.Clear();
                    count++;
                }
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_CategoryManagerDataAccess.Delete: {0}", ex.Message));
            }

            return count;
        }


    }
}


