//------------------------------------------------------------------------------------------------------------------------
//-- Generated By:   TrungVK using CodeSmith 5.0.0.0
//-- Template:       DataAcess.cst
//-- Date Generated: Monday, July 05, 2010
//------------------------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Text;
using Entity;

namespace DataAccess
{
    public partial class SYS_OrganizationDataAccess 
    {

        

        public List<SYS_Organization> SelectAllSYS_OrganizationByNotSYS_Roles()
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            List<SYS_Organization> sys_organization = new List<SYS_Organization>();
            DbDataReader reader = null;
            try
            {
                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_OrganizationByNotSYS_Roles]", (DbParameter[])null);
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_OrganizationDataAccess.SelectAll: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }

        public List<SYS_Organization> SelectAllSYS_Organization(string connect)
        {
            SYS_ConfigConnectionDataAccess connectionDataAccess = new SYS_ConfigConnectionDataAccess();
            connect = connectionDataAccess.DecryptSYS_ConfigConnection(connect);
            DbConnection conn = _DbHelper.CreateConnection(connect);
            conn.Open();
            List<SYS_Organization> sys_organization = new List<SYS_Organization>();
            DbDataReader reader = null;
            try
            {
                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Organization_SelectAll]", (DbParameter[])null);
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_OrganizationDataAccess.SelectAll: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }

        public List<SYS_Organization> SYS_Organization_SelectByCodeBV(DbConnection dbTransaction)
        {
            List<SYS_Organization> sys_organization = new List<SYS_Organization>();
            DbDataReader reader = null;
            try
            {
                reader = _DbHelper.ExecuteReader(dbTransaction, Common.DatabaseSchema + "[SYS_Organization_SelectByCodeBV]", (DbParameter[])null);
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_Organization_SelectByCodeBV.SelectAll: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
            }
        }
        public List<SYS_Organization> SYS_Organization_SelectByCodeBV(string connect)
        {
            SYS_ConfigConnectionDataAccess connectionDataAccess = new SYS_ConfigConnectionDataAccess();
            connect = connectionDataAccess.DecryptSYS_ConfigConnection(connect);
            DbConnection conn = _DbHelper.CreateConnection(connect);
            List<SYS_Organization> sys_organization = new List<SYS_Organization>();
            conn.Open();
            DbDataReader reader = null;
            try
            {
                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Organization_SelectByCodeBV]", (DbParameter[])null);
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_Organization_SelectByCodeBV.SelectAll: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
            }
        }
        public List<SYS_Organization> SYS_Organization_GetByParentId(string connect)
        {
            SYS_ConfigConnectionDataAccess connectionDataAccess = new SYS_ConfigConnectionDataAccess();
            connect = connectionDataAccess.DecryptSYS_ConfigConnection(connect);
            DbConnection conn = _DbHelper.CreateConnection(connect);
            conn.Open();
            List<SYS_Organization> sys_organization = new List<SYS_Organization>();
            DbDataReader reader = null;
            try
            {
                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Organization_GetByParentId]", (DbParameter[])null);
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationUserInfo(ref reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_Organization_GetByParentId.SelectAll: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }

        public List<SYS_Organization> SYS_Organization_GetProvinces()
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            List<SYS_Organization> sys_organization = new List<SYS_Organization>();
            DbDataReader reader = null;
            try
            {
                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Organization_GetProvinces]", (DbParameter[])null);
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_OrganizationDataAccess.SYS_Organization_GetProvinces: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }

        private static void SetSYS_OrganizationUserInfo(DbDataReader reader, ref SYS_Organization sys_organization)
        {
            sys_organization.UserName = "" + reader["UserName"];
            sys_organization.Email = "" + reader["Email"];
            sys_organization.Name = "" + reader[FIELD_NAME];
            sys_organization.ID = int.Parse("0" + reader[FIELD_ID]);
            sys_organization.NumberPhone = "" + reader["NumberPhone"];
        }

        private static void SetListSYS_OrganizationUserInfo(ref DbDataReader reader, ref List<SYS_Organization> sys_organizations)
        {
            SYS_Organization sys_organization = null;
            while (reader.Read())
            {
                sys_organization = new SYS_Organization();
                SYS_OrganizationDataAccess.SetSYS_OrganizationUserInfo(reader, ref sys_organization);
                sys_organizations.Add(sys_organization);
            }
        }

        public List<SYS_Organization> SelectAllSYS_Organization_GetByUserID(int ID, string connect)
        {
            SYS_ConfigConnectionDataAccess connectionDataAccess = new SYS_ConfigConnectionDataAccess();
            connect = connectionDataAccess.DecryptSYS_ConfigConnection(connect);
            DbConnection conn = _DbHelper.CreateConnection(connect);
            conn.Open();
            List<SYS_Organization> sys_organization = new List<SYS_Organization>();
            DbDataReader reader = null;
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ID, ID, false));

                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Organization_GetByUserID]", para.ToArray());
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_OrganizationDataAccess.SelectByUserId: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }
        public List<SYS_Organization> SYS_Organization_GetParentIdByID(int ID)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            List<SYS_Organization> sys_organization = new List<SYS_Organization>();
            DbDataReader reader = null;
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ID, ID, false));

                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Organization_GetParentIdByID]", para.ToArray());
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_Organization_GetParentIdByID.SelectByUserId: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }
        public List<SYS_Organization> SelectAllSYS_Organization_GetByUserID(int ID)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            List<SYS_Organization> sys_organization = new List<SYS_Organization>();
            DbDataReader reader = null;
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ID, ID, false));

                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Organization_GetByUserID]", para.ToArray());
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_OrganizationDataAccess.SelectByUserId: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }

        public List<SYS_Organization> SelectAllSYS_OrganizationByStrCn(string connection)
        {
            SYS_ConfigConnectionDataAccess connectionDataAccess = new SYS_ConfigConnectionDataAccess();
            connection = connectionDataAccess.DecryptSYS_ConfigConnection(connection);
            DbConnection conn = _DbHelper.CreateConnection(connection);
            conn.Open();
            List<SYS_Organization> sys_organization = new List<SYS_Organization>();
            DbDataReader reader = null;
            try
            {
                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Organization_SelectAll]", (DbParameter[])null);
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_OrganizationDataAccess.SelectAll: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }

        public List<SYS_Organization> SelectAll_Tinh_SYS_OrganizationByStrCn(string connection)
        {
            SYS_ConfigConnectionDataAccess connectionDataAccess = new SYS_ConfigConnectionDataAccess();
            connection = connectionDataAccess.DecryptSYS_ConfigConnection(connection);
            DbConnection conn = _DbHelper.CreateConnection(connection);
            conn.Open();
            List<SYS_Organization> sys_organization = new List<SYS_Organization>();
            DbDataReader reader = null;
            try
            {
                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Organization_SelectAll_Tinh]", (DbParameter[])null);
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_OrganizationDataAccess.SelectAll: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }
        public SYS_Organization SelectSYS_Organization_GetByCode(string Code, string Connect)
        {
            SYS_Organization sys_organization = new SYS_Organization();
            DbDataReader reader = null;
            DbConnection dbConnection = Common.CreateConnection(Connect);
            dbConnection.Open();
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter("Code", Code, false));

                reader = _DbHelper.ExecuteReader(dbConnection, Common.DatabaseSchema + "[SYS_Organization_GetByCode]", para.ToArray());
                if (reader.HasRows && reader.Read())
                    SYS_OrganizationDataAccess.SetSYS_OrganizationInfo(reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_Organization_GetByCode: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                dbConnection.Close();
            }
        }

        public SYS_Organization SelectSYS_Organization(DbConnection connection, int ID)
        {

            SYS_Organization sys_organization = new SYS_Organization();
            DbDataReader reader = null;
            try
            {
                if (connection.State == ConnectionState.Closed)
                {
                    connection.Open();
                }
                else
                {
                    if (connection.State != ConnectionState.Open)
                    {
                        throw new Exception("Connection is not ready");
                    }

                }
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ID, ID, false));

                reader = _DbHelper.ExecuteReader(connection, Common.DatabaseSchema + "[SYS_Organization_GetByID]", para.ToArray());
                if (reader.HasRows && reader.Read())
                    SYS_OrganizationDataAccess.SetSYS_OrganizationInfo(reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_OrganizationDataAccess.SelectById: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
            }

        }

        public List<SYS_Organization> SelectAllSYS_RegionByIDRegion(int IDRegion)
        {
            List<SYS_Organization> sys_region = new List<SYS_Organization>();
            DbDataReader reader = null;
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ID, IDRegion, false));
                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Region_SelectAllByIDRegion]", para.ToArray());
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_region);
                return sys_region;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SelectAllSYS_RegionByIDRegion: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }

        public List<SYS_Organization> SelectAllSYS_OrganizationGetRegion()
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            List<SYS_Organization> sys_organization = new List<SYS_Organization>();
            DbDataReader reader = null;
            try
            {
                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Organization_GetRegion]", (DbParameter[])null);
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SelectAllSYS_OrganizationGetRegion: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }

        public List<SYS_Organization> SelectByCodeType(string Code)
        {
            SYS_ConfigConnectionDataAccess connectionDataAccess = new SYS_ConfigConnectionDataAccess();
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            List<SYS_Organization> sys_organization = new List<SYS_Organization>();
            DbDataReader reader = null;
            try
            {

                if (!string.IsNullOrEmpty(Code))
                {
                    List<DbParameter> para = new List<DbParameter>();
                    para.Add(_DbHelper.CreateParameter("Code", Code, false));
                    reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Organization_SelectByCodeType]", para.ToArray());
                }
                else
                {
                    reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Organization_SelectByCodeType]",
                                                     (DbParameter[])null);
                }
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_organization);
                return sys_organization;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_OrganizationDataAccess.SelectByCodeType: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }

        }

        public List<SYS_Organization> SelectAllSYS_OrganizationByType(int Type)
        {
            List<SYS_Organization> sys_region = new List<SYS_Organization>();
            DbDataReader reader = null;
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_TYPE, Type, false));
                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Organization_GetByType]", para.ToArray());
                if (reader.HasRows)
                    SYS_OrganizationDataAccess.SetListSYS_OrganizationInfo(ref reader, ref sys_region);
                return sys_region;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SelectAllSYS_OrganizationByType: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }
    }
}


