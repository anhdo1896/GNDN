//------------------------------------------------------------------------------------------------------------------------
//-- Generated By:   TrungVK using CodeSmith 5.0.0.0
//-- Template:       DataAcess.cst
//-- Date Generated: Monday, July 05, 2010
//------------------------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data.Common;
using Entity;

namespace DataAccess
{
    public partial class SYS_LanguageDataAccess
    {
        public SYS_Language SelectDefaultLanguage()
        {
            SYS_Language sys_language = new SYS_Language();
            DbDataReader reader = null;
            DbConnection connection = _DbHelper.CreateConnection(Common.ConnectionString);
            connection.Open();
            List<DbParameter> para = new List<DbParameter>();
            para.Add(_DbHelper.CreateParameter(FIELD_ISDEFAULT, true, false));
            try
            {
                reader = _DbHelper.ExecuteReader(connection, Common.DatabaseSchema + "[SYS_Language_GetDefault]", para.ToArray());
                if (reader.HasRows)
                {

                    while (reader.Read())
                    {
                        SetSYS_LanguageInfo(reader, ref sys_language);
     
                    }
                }

                
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_LanguageDataAccess.SYS_Language_GetDefault: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                connection.Close();
            }
            return sys_language;
        }

        public SYS_Language SelectDefaultLanguage(string connect)
        {
            SYS_ConfigConnectionDataAccess connectionDataAccess = new SYS_ConfigConnectionDataAccess();
            connect = connectionDataAccess.DecryptSYS_ConfigConnection(connect);
            SYS_Language sys_language = new SYS_Language();
            DbDataReader reader = null;
            DbConnection connection = _DbHelper.CreateConnection(connect);
            connection.Open();
            List<DbParameter> para = new List<DbParameter>();
            para.Add(_DbHelper.CreateParameter(FIELD_ISDEFAULT, true, false));
            try
            {
                reader = _DbHelper.ExecuteReader(connection, Common.DatabaseSchema + "[SYS_Language_GetDefault]", para.ToArray());
                if (reader.HasRows)
                {

                    while (reader.Read())
                    {
                        SetSYS_LanguageInfo(reader, ref sys_language);

                    }
                }


            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_LanguageDataAccess.SYS_Language_GetDefault: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                connection.Close();
            }
            return sys_language;
        }

        public SYS_Language SelectSYS_Language(int ID)
        {

            SYS_Language sys_language = new SYS_Language();
            DbDataReader reader = null;
            DbConnection connection = _DbHelper.CreateConnection(Common.ConnectionString);
            connection.Open();
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ID, ID, false));

                reader = _DbHelper.ExecuteReader(connection, Common.DatabaseSchema + "[SYS_Language_SelectById]", para.ToArray());
                if (reader.HasRows && reader.Read())
                    SYS_LanguageDataAccess.SetSYS_LanguageInfo(reader, ref sys_language);

            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_LanguageDataAccess.SelectById: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                connection.Close();
            }
            return sys_language;
        }

        public SYS_Language SelectSYS_Language(int sys_LanguageId, string connect)
        {
            SYS_ConfigConnectionDataAccess connectionDataAccess = new SYS_ConfigConnectionDataAccess();
            connect = connectionDataAccess.DecryptSYS_ConfigConnection(connect);
            SYS_Language sys_language = new SYS_Language();
            DbDataReader reader = null;
            DbConnection connection = _DbHelper.CreateConnection(connect);
            connection.Open();
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_LanguageId, false));

                reader = _DbHelper.ExecuteReader(connection, Common.DatabaseSchema + "[SYS_Language_SelectById]", para.ToArray());
                if (reader.HasRows && reader.Read())
                    SYS_LanguageDataAccess.SetSYS_LanguageInfo(reader, ref sys_language);

            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_LanguageDataAccess.SelectById: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                connection.Close();
            }
            return sys_language;
        }


        public List<SYS_Language> SelectAllSYS_Language()
        {
            List<SYS_Language> sys_language = new List<SYS_Language>();
            DbDataReader reader = null;
            DbConnection connection = _DbHelper.CreateConnection(Common.ConnectionString);
            connection.Open();
            try
            {
                reader = _DbHelper.ExecuteReader(connection, Common.DatabaseSchema + "[SYS_Language_SelectAll]",
                                                 (DbParameter[])null);
                if (reader.HasRows)
                    SYS_LanguageDataAccess.SetListSYS_LanguageInfo(ref reader, ref sys_language);

            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_LanguageDataAccess.SelectAll: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                connection.Close();
            }
            return sys_language;
        }
    }
}


