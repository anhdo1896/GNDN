//------------------------------------------------------------------------------------------------------------------------
//-- Generated By:   TrungVK using CodeSmith 5.0.0.0
//-- Template:       DataAcessGen.cst
//-- Date Generated: Monday, July 12, 2010
//------------------------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Text;
using Connection;
using Entity;


namespace DataAccess
{
    public partial class SYS_StaffDataAccess
    {

        private SYS_Staff _sys_staff;

        private MSSqlHelper _DbHelper = new MSSqlHelper();

        public static string FIELD_ORGANIZATIONID = "OrganizationId";
        public static string FIELD_USERID = "UserId";
        public static string FIELD_POSITIONID = "PositionId";
        public static string FIELD_ID = "ID";
        public static string FIELD_FROMDATE = "FromDate";
        public static string FIELD_TODATE = "ToDate";
        public static string FIELD_ROLEID = "RolesId";


        #region Private methods

        private static void SetSYS_StaffInfo(DbDataReader reader, ref SYS_Staff sys_staff)
        {
            sys_staff.OrganizationId = int.Parse("0" + reader[FIELD_ORGANIZATIONID]);
            sys_staff.UserId = int.Parse("0" + reader[FIELD_USERID]);
            sys_staff.PositionId = int.Parse("0" + reader[FIELD_POSITIONID]);
            sys_staff.ID = int.Parse("0" + reader[FIELD_ID]);
            sys_staff.RoleID = int.Parse(reader[FIELD_ROLEID].ToString());
            //DateTime FromDate = (DateTime)reader[FIELD_FROMDATE];
            if (reader[FIELD_FROMDATE] + "" != "")
            {
                sys_staff.FromDate = (DateTime)reader[FIELD_FROMDATE];
            }
            //sys_staff.FromDate = reader[FIELD_FROMDATE] != null ? (DateTime)reader[FIELD_FROMDATE] : DateTime.Now;
            //DateTime ToDate = (DateTime)reader[FIELD_TODATE];
            if (reader[FIELD_TODATE] + "" != "")
            {
                sys_staff.ToDate = (DateTime)reader[FIELD_TODATE];
            }
            //sys_staff.ToDate = reader[FIELD_TODATE] != null ? (DateTime)reader[FIELD_TODATE] : DateTime.Now;
        }

        private static void SetListSYS_StaffInfo(ref DbDataReader reader, ref List<SYS_Staff> sys_staffs)
        {
            SYS_Staff sys_staff = null;
            while (reader.Read())
            {
                sys_staff = new SYS_Staff();
                SYS_StaffDataAccess.SetSYS_StaffInfo(reader, ref sys_staff);
                sys_staffs.Add(sys_staff);
            }
        }

        #endregion

        #region Static methods
        #endregion
        public int InsertSYS_Staff(SYS_Staff sys_staff)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ORGANIZATIONID, sys_staff.OrganizationId, false));
                para.Add(_DbHelper.CreateParameter(FIELD_USERID, sys_staff.UserId, false));
                para.Add(_DbHelper.CreateParameter(FIELD_POSITIONID, sys_staff.PositionId, false));
                DbParameter ouput = _DbHelper.CreateParameter(FIELD_ID, DbType.Int32, true);
                para.Add(_DbHelper.CreateParameter(FIELD_FROMDATE, sys_staff.FromDate, false));
                para.Add(_DbHelper.CreateParameter(FIELD_TODATE, sys_staff.ToDate, false));
                para.Add(_DbHelper.CreateParameter(FIELD_ROLEID, sys_staff.RoleID, false));
                para.Add(ouput);
                _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Staff_Insert]", para.ToArray());
                return (int)ouput.Value;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_StaffDataAccess.Insert: {0}", ex.Message));
            }
            finally
            { conn.Close(); }
        }

        public int UpdateSYS_Staff(List<SYS_Staff> sys_staffs)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            int count = 0;
            try
            {

                foreach (SYS_Staff sys_staff in sys_staffs)
                {
                    List<DbParameter> para = new List<DbParameter>();

                    para.Add(_DbHelper.CreateParameter(FIELD_ORGANIZATIONID, sys_staff.OrganizationId, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_USERID, sys_staff.UserId, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_POSITIONID, sys_staff.PositionId, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_staff.ID, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_FROMDATE, sys_staff.FromDate, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_TODATE, sys_staff.ToDate, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_ROLEID, sys_staff.RoleID, false));

                    _DbHelper.ExecuteNonQuery(conn, Common.DatabaseSchema + "[sys_staff_Update]", para.ToArray());
                    count++;
                }
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_StaffDataAccess.Update: {0}", ex.Message));
            }
            finally
            {
                conn.Close();
            }
            return count;
        }

        public void UpdateSYS_Staff(SYS_Staff sys_staff)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            try
            {
                List<DbParameter> para = new List<DbParameter>();

                para.Add(_DbHelper.CreateParameter(FIELD_ORGANIZATIONID, sys_staff.OrganizationId, false));
                para.Add(_DbHelper.CreateParameter(FIELD_USERID, sys_staff.UserId, false));
                para.Add(_DbHelper.CreateParameter(FIELD_POSITIONID, sys_staff.PositionId, false));
                para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_staff.ID, false));
                para.Add(_DbHelper.CreateParameter(FIELD_FROMDATE, sys_staff.FromDate, false));
                para.Add(_DbHelper.CreateParameter(FIELD_TODATE, sys_staff.ToDate, false));
                para.Add(_DbHelper.CreateParameter(FIELD_ROLEID, sys_staff.RoleID, false));

                _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Staff_Update]", para.ToArray());

            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_StaffDataAccess.Update: {0}", ex.Message));
            }
            finally
            {
                conn.Close();
            }
        }

        public void DeleteSYS_Staff(List<SYS_Staff> sys_staffs)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            List<DbParameter> para = new List<DbParameter>();

            try
            {

                foreach (SYS_Staff sys_staff in sys_staffs)
                {

                    para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_staff.ID, false));

                    _DbHelper.ExecuteNonQuery(conn, Common.DatabaseSchema + "[SYS_Staff_Delete]", para.ToArray());
                    para.Clear();
                }
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_StaffDataAccess.Delete: {0}", ex.Message));
            }
            finally
            {
                conn.Close();
            }
        }

        public void DeleteSYS_Staff(SYS_Staff sys_staff)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_staff.ID, false));
                _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Staff_Delete]", para.ToArray());
            }
            catch (Exception)
            {

                throw;
            }
            finally
            {
                conn.Close();
            }

        }

        public SYS_Staff SelectSYS_Staff(int ID)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            SYS_Staff sys_staff = new SYS_Staff();
            DbDataReader reader = null;
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ID, ID, false));

                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Staff_SelectById]", para.ToArray());
                if (reader.HasRows && reader.Read())
                    SYS_StaffDataAccess.SetSYS_StaffInfo(reader, ref sys_staff);
                return sys_staff;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_StaffDataAccess.SelectById: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }

        }


        public List<SYS_Staff> SelectAllSYS_Staff()
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            List<SYS_Staff> sys_staff = new List<SYS_Staff>();
            DbDataReader reader = null;
            try
            {
                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Staff_SelectAll]", (DbParameter[])null);
                if (reader.HasRows)
                    SYS_StaffDataAccess.SetListSYS_StaffInfo(ref reader, ref sys_staff);
                return sys_staff;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format(" SYS_StaffDataAccess.SelectAll: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }
        }

        public int InsertSYS_Staff(DbTransaction transaction, SYS_Staff sys_staff)
        {
            try
            {
                List<DbParameter> para = new List<DbParameter>();

                para.Add(_DbHelper.CreateParameter(FIELD_ORGANIZATIONID, sys_staff.OrganizationId, false));
                para.Add(_DbHelper.CreateParameter(FIELD_USERID, sys_staff.UserId, false));
                para.Add(_DbHelper.CreateParameter(FIELD_POSITIONID, sys_staff.PositionId, false));
                DbParameter ouput = _DbHelper.CreateParameter(FIELD_ID, DbType.Int32, true);
                para.Add(_DbHelper.CreateParameter(FIELD_FROMDATE, sys_staff.FromDate, false));
                para.Add(_DbHelper.CreateParameter(FIELD_TODATE, sys_staff.ToDate, false));
                para.Add(_DbHelper.CreateParameter(FIELD_ROLEID, sys_staff.RoleID, false));

                para.Add(ouput);

                _DbHelper.ExecuteNonQuery(transaction, Common.DatabaseSchema + "[SYS_Staff_Insert]", para.ToArray());

                return (int)ouput.Value;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_StaffDataAccess.Insert: {0}", ex.Message));
            }
        }



        public int UpdateSYS_Staff(DbTransaction transaction, List<SYS_Staff> sys_staffs)
        {

            int count = 0;
            try
            {

                foreach (SYS_Staff sys_staff in sys_staffs)
                {
                    List<DbParameter> para = new List<DbParameter>();

                    para.Add(_DbHelper.CreateParameter(FIELD_ORGANIZATIONID, sys_staff.OrganizationId, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_USERID, sys_staff.UserId, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_POSITIONID, sys_staff.PositionId, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_staff.ID, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_FROMDATE, sys_staff.FromDate, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_TODATE, sys_staff.ToDate, false));
                    para.Add(_DbHelper.CreateParameter(FIELD_ROLEID, sys_staff.RoleID, false));

                    _DbHelper.ExecuteNonQuery(transaction, Common.DatabaseSchema + "[SYS_Staff_Update]", para.ToArray());
                    count++;
                }
            }

            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_StaffDataAccess.Update: {0}", ex.Message));
            }

            return count;
        }

        public void UpdateSYS_Staff(DbTransaction transaction, SYS_Staff sys_staff)
        {
            try
            {
                List<DbParameter> para = new List<DbParameter>();

                para.Add(_DbHelper.CreateParameter(FIELD_ORGANIZATIONID, sys_staff.OrganizationId, false));
                para.Add(_DbHelper.CreateParameter(FIELD_USERID, sys_staff.UserId, false));
                para.Add(_DbHelper.CreateParameter(FIELD_POSITIONID, sys_staff.PositionId, false));
                para.Add(_DbHelper.CreateParameter(FIELD_ID, sys_staff.ID, false));
                para.Add(_DbHelper.CreateParameter(FIELD_FROMDATE, sys_staff.FromDate, false));
                para.Add(_DbHelper.CreateParameter(FIELD_TODATE, sys_staff.ToDate, false));
                para.Add(_DbHelper.CreateParameter(FIELD_ROLEID, sys_staff.RoleID, false));

                _DbHelper.ExecuteNonQuery(transaction, Common.DatabaseSchema + "[SYS_Staff_Update]", para.ToArray());

            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_StaffDataAccess.Update: {0}", ex.Message));
            }
        }

        public int DeleteSYS_Staff(DbTransaction transaction, List<SYS_Staff> sys_staffs)
        {
            int count = 0;
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                foreach (SYS_Staff sys_staff in sys_staffs)
                {
                    para.Add(_DbHelper.CreateParameter(FIELD_ID, DbType.Int32, false));

                    _DbHelper.ExecuteNonQuery(transaction, Common.DatabaseSchema + "[SYS_Staff_Delete]", para.ToArray());
                    para.Clear();
                    count++;
                }
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_StaffDataAccess.Delete: {0}", ex.Message));
            }

            return count;
        }
    }
}

