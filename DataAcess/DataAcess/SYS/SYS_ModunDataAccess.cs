//------------------------------------------------------------------------------------------------------------------------
//-- Generated By:   TrungVK using CodeSmith 5.0.0.0
//-- Template:       DataAcess.cst
//-- Date Generated: Tuesday, April 19, 2011
//------------------------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data.Common;
using System.Linq;
using System.Text;
using Entity;

namespace DataAccess
{
    public partial class SYS_ModunDataAccess
    {
        public SYS_Modun SelectSYS_ModunTest(int ID)
        {
            DbConnection conn = _DbHelper.CreateConnection(Common.ConnectionString);
            conn.Open();
            SYS_Modun sys_modun = new SYS_Modun();
            DbDataReader reader = null;
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ID, ID, false));

                reader = _DbHelper.ExecuteReader(conn, Common.DatabaseSchema + "[SYS_Modun_SelectById]", para.ToArray());
                if (reader.HasRows && reader.Read())
                    SYS_ModunDataAccess.SetSYS_ModunInfo(reader, ref sys_modun);
                return sys_modun;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_ModunDataAccess.SelectById: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
                conn.Close();
            }

        }
        public SYS_Modun SelectSYS_Modun(int ID, DbConnection connection)
        {

            SYS_Modun sys_modun = new SYS_Modun();
            DbDataReader reader = null;
            try
            {
                List<DbParameter> para = new List<DbParameter>();
                para.Add(_DbHelper.CreateParameter(FIELD_ID, ID, false));

                reader = _DbHelper.ExecuteReader(connection, Common.DatabaseSchema + "[SYS_Modun_SelectById]", para.ToArray());
                if (reader.HasRows && reader.Read())
                    SYS_ModunDataAccess.SetSYS_ModunInfo(reader, ref sys_modun);
                return sys_modun;
            }
            catch (Exception ex)
            {
                throw new Exception(String.Format("SYS_ModunDataAccess.SelectById: {0}", ex.Message));
            }
            finally
            {
                if (reader != null)
                    reader.Close();
            }

        }
    }
}


